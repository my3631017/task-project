# Root logger option
# 指定输出目的地stdout和file
log4j.rootLogger=DEBUG, stdout, file1,file2
# Redirect log messages to console
#指定输出目的地stdout为输出到控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Threshold=ERROR

#指定stdout输出控制台,默认情况下是：System.out
log4j.appender.stdout.Target=System.out
#指定stdout的布局
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#指定stdout的布局的输出格式
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} <%t> [ %p ] %l %m %n
# Redirect log messages to a log file, support file rolling.
#指定输出目的地file为输出到文件
log4j.appender.file1=org.apache.log4j.RollingFileAppender
#指定file1的输出日志路径
log4j.appender.file1.File=C:/Users/36310/IdeaProjects/Log4jPractice/logs/log.log
log4j.appender.file1.Append=true
log4j.appender.file1.Threshold=DEBUG
log4j.appender.file1.layout=org.apache.log4j.PatternLayout
log4j.appender.file1.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
### 输出ERROR 级别以上的日志 ###
log4j.appender.file2=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file2.File=C:/Users/36310/IdeaProjects/Log4jPractice/logs/error.log
log4j.appender.file2.Append=true
log4j.appender.file2.Threshold=ERROR
log4j.appender.file2.layout=org.apache.log4j.PatternLayout
log4j.appender.file2.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %t [ %p ] %l %m %n